<!DOCTYPE HTML>
<html>

<head>
    <meta charset="UTF-8">
    <title><%= title %></title>

    <%- include ('../part/head.ejs') %>

    <style>
        .schedule-board {
            min-height: 35rem;
            margin-top: 4rem !important;
        }

        .schedule-board .title {
            font-size: 1.8rem;
            padding: 0;
            margin-bottom: 1.5rem;
            font-weight: bold;
        }

        .schedule-board .time {
            font-size: 1.4rem
        }
    </style>
</head>

<header>
    <%- include ('../part/header.ejs') %>
</header>

<body>
<%- include ('../part/menu.ejs') %>
<div id="main">
    <div class="row">
        <div class="col-9">
            <div id="calendar" style=""></div>
        </div>
        <div class="col-3">
            <div class="content-box schedule-board">
                <span class="title" id="scheduleTitle">일정제목</span>
                <span class="time" id="scheduleTime"> 🕒09:00~18:00</span>
                <hr>
                <div id="scheduleMemo">
                    일정내용
                </div>
            </div>
        </div>
    </div>
</div>
</body>

</html>

<script>
    <%- include ('../common/check-data.js') %>

    document.addEventListener('DOMContentLoaded', function () {
        let scheduleSendData = {};
        scheduleSendData.viewOption = 'all dep own';
        scheduleSendData.page = 0;
        scheduleSendData.size = 100;
        let today = new Date();
        scheduleSendData.startDate = getToday(today);
        scheduleSendData.endDate = getToday(new Date(today.setDate(today.getDate() + 7)));

        //주간일정 조회
        requestWithData('schedule/readScheduleList', scheduleSendData, setScheduleList);
    });

    //달력 일정 셋팅
    function setScheduleList(res) {
        if (res.code === null) {
            return;
        }
        if (res.code === 'RSL001') {
            let scheduleArr = new Array();
            for (let i = 0; i < res.data.length; i++) {
                let schedule = new Object();

                schedule.title = res.data[i].title;
                schedule.memo = res.data[i].memo;
                schedule.start = res.data[i].startDate;
                schedule.end = res.data[i].endDate;

                scheduleArr.push(schedule);
            }
            setCalendar(scheduleArr);
            console.log(res)
        } else if (res.code === 'RSL002') {
            alert("일정목록 조회 실패");
        }
    }

    //fullcalendar - 셋팅
    function setCalendar(data) {
        let calendarEl = document.getElementById('calendar');
        let calendar = new FullCalendar.Calendar(calendarEl, {
            initialView: 'dayGridMonth',
            locale: 'ko',
            events: data,
            eventTimeFormat: {
                hour: '2-digit',
                minute: '2-digit',
                hour12: false
            },
            eventClick: function (info) {
                $("#scheduleTitle").text(info.event.title);
                let start = getTodayArr(info.event.start);
                let startTime = ("0" + start[3]).slice(-2) + ":" + ("0" + start[4]).slice(-2);
                let end = getTodayArr(info.event.end);
                let endTime = ("0" + end[3]).slice(-2) + ":" + ("0" + end[4]).slice(-2);
                $("#scheduleTime").text("🕒" + startTime + "~" + endTime);
            }

        });
        calendar.render();
    }

</script>