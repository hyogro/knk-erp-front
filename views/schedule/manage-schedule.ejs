<!DOCTYPE HTML>
<html>

<head>
    <meta charset="UTF-8">
    <title><%= title %></title>

    <%- include ('../part/head.ejs') %>

    <style>
        .col-lg {
            margin: 0.5rem !important;
        }

        .row {
            --bs-gutter-x: 0;
        }

        table {
            text-align: left;
        }

        table th {
            vertical-align: top;
        }

        #myScheduleList td {
            cursor: pointer;
        }

        #myScheduleList td:hover,
        #myScheduleList td:focus,
        #myScheduleList td:active {
            text-decoration: underline;
            background: #eef1fd;
        }

        .schedule-board .title {
            font-size: 2.5rem;
            padding: 0;
            font-weight: bold;
        }

        .schedule-board .time {
            font-size: 1.4rem;
            padding: 0;
        }

        .schedule-board .memo {
            padding: 0.5rem 1rem !important;
        }

        #createTitle, #createMemo {
            width: 100%;
        }

        .schedule-write input[type=text],
        .schedule-write textarea {
            width: 100%;
        }

        .schedule-write textarea {
            min-height: 20rem;
            height: 20rem;
            max-height: 20rem;
            overflow-y: auto;
        }

        .schedule-write select {
            width: 10rem;
        }

        .schedule-write input[type=date],
        .schedule-write input[type=time] {
            width: 13rem;
        }

    </style>
</head>

<header>
    <%- include ('../part/header.ejs') %>
</header>

<body>
<%- include ('../part/menu.ejs') %>
<div id="main">
    <div class="row">
        <div class="col-lg content-box schedule-board">
            <div class="row title">
                ÎÇ¥ Í∑ºÎ¨¥ ÏùºÏ†ï
            </div>
            <div class="row" style="width: 100%;display: inline-block">
                <div style="float: left;width: fit-content">
                    <select id="year" style="width: 9rem" onchange="searchScheduleList()">
                    </select>
                    <select id="month" style="width: 8rem" onchange="searchScheduleList()">
                    </select>
                </div>
                <div style="float: right;width: fit-content">
                    <button type="button" class="btn btn-primary" onclick="typeSchedule('create')"
                            data-bs-toggle="modal" data-bs-target="#saveScheduleModal">ÏùºÏ†ï Ï∂îÍ∞Ä
                    </button>
                </div>
            </div>
            <div class="row scroll" style="overflow-y: auto;max-height: 60rem;height: 60rem">
                <table>
                    <tbody id="myScheduleList">
                    </tbody>
                </table>
            </div>
        </div>
        <div class="col-lg content-box schedule-board" id="detailSchedule" style="visibility: hidden">
            <div class="row">
                <div class="title" id="scheduleTitle">
                </div>
                <span class="time" id="scheduleTime"></span>
            </div>
            <hr>
            <div class="row memo scroll" id="scheduleMemo" style="overflow-y: auto;max-height: 55rem;height: 55rem">
            </div>
            <hr>
            <div class="row" style="display: block;">
                <div style="float: right;width: fit-content">
                    <button type="button" class="btn btn-secondary" onclick="typeSchedule('update')"
                            data-bs-toggle="modal" data-bs-target="#saveScheduleModal">ÏàòÏ†ï
                    </button>
                    <button type="button" class="btn btn-danger" onclick="deleteAlertSchedule()">ÏÇ≠Ï†ú</button>
                </div>
            </div>
        </div>
        <!-- Modal -->
        <div class="modal fade" id="saveScheduleModal" tabindex="-1"
             aria-labelledby="saveScheduleModalLabel" aria-hidden="true">
            <div class="modal-dialog" style="min-width: 60rem !important;">
                <div class="modal-content">
                    <div class="modal-header">
                        <div>ÏùºÏ†ïÏ∂îÍ∞Ä</div>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"
                                aria-label="Close"></button>
                    </div>
                    <div class="modal-body schedule-write">
                        <table>
                            <tbody>
                            <tr>
                                <th width="20%">Ï†úÎ™©</th>
                                <td>
                                    <input type="text" id="createTitle">
                                </td>
                            </tr>
                            <tr>
                                <th>Í≥µÍ∞úÎ≤îÏúÑ</th>
                                <td>
                                    <select id="createViewOption">
                                        <option value="own">Í∞úÏù∏</option>
                                        <option value="dep">Î∂ÄÏÑú</option>
                                        <option value="all">Ï†ÑÏ≤¥</option>
                                    </select>
                                </td>
                            </tr>
                            <tr>
                                <th>ÏãúÏûë</th>
                                <td>
                                    <input type="date" id="createStartDate">
                                    <input type="time" id="createStartTime">
                                </td>
                            </tr>
                            <tr>
                                <th>Ï¢ÖÎ£å</th>
                                <td>
                                    <input type="date" id="createEndDate">
                                    <input type="time" id="createEndTime">
                                </td>
                            </tr>
                            <tr>
                                <th>ÎÇ¥Ïö©</th>
                                <td>
                                    <textarea class="scroll" id="createMemo"></textarea>
                                </td>
                            </tr>
                            </tbody>
                        </table>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Ï∑®ÏÜå</button>
                        <button type="button" class="btn btn-primary" id="saveBtn">Ï†ÄÏû•</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
</body>

</html>

<script>

    <%- include ('../common/check-data.js') %>

    let scheduleArr = [];

    setBoardData();

    function setBoardData() {
        let scheduleSendData = {};
        scheduleSendData.viewOption = '';
        scheduleSendData.page = 0;
        scheduleSendData.size = 100;

        //Ï£ºÍ∞ÑÏùºÏ†ï Ï°∞Ìöå
        requestWithData('schedule/readScheduleList', scheduleSendData, setScheduleList);
    }

    //Ï¥àÍ∏∞ ÏÖãÌåÖ
    function setScheduleList(res) {
        if (res.code === null) {
            return;
        }
        if (res.code === 'RSL001') {
            scheduleArr = res.data;
            setDateSelector();
        } else if (res.code === 'RSL002') {
            alert("ÏùºÏ†ïÎ™©Î°ù Ï°∞Ìöå Ïã§Ìå®");
        }
    }

    // Ï¥àÍ∏∞ ÎÇ†Ïßú ÏÖãÌåÖ
    function setDateSelector() {
        let dateSet = new Set();
        for (let i = 0; i < scheduleArr.length; i++) {
            dateSet.add((scheduleArr[i].startDate).toString().substring(0, 7));
            dateSet.add((scheduleArr[i].endDate).toString().substring(0, 7));
        }
        let dateArr = Array.from(dateSet);
        for (let i = 0; i < dateArr.length; i++) {
            let date = dateArr[i].split("-");
            $("#year").append("<option>" + date[0] + "</option>");
            $("#month").append("<option>" + date[1] + "</option>");
        }

        searchScheduleList();
    }

    //ÎÇ¥ ÏùºÏ†ï Í≤ÄÏÉâ
    function searchScheduleList() {
        $("#myScheduleList").empty();
        let date = $("#year").val() + "-" + $("#month").val();
        for (let i = 0; i < scheduleArr.length; i++) {
            if ((scheduleArr[i].startDate).substring(0, 7) === date ||
                (scheduleArr[i].endDate).substring(0, 7) === date) {
                let startDate = (scheduleArr[i].startDate).split("T")[0].replaceAll("-", ".");
                let endDate = (scheduleArr[i].endDate).split("T")[0].replaceAll("-", ".");

                let html = '';
                if (startDate === endDate) {
                    html += '<tr><th width="30%">' + startDate + '</th>';
                } else {
                    html += '<tr><th width="30%">' + startDate + "~" + endDate + '</th>';
                }
                html += '<td width="70%" id=\'' + scheduleArr[i].id + '\' onclick="detailSchedule(id)">' +
                    scheduleArr[i].title + '</td></tr>';

                $("#myScheduleList").append(html);
            }
        }
    }

    //ÏùºÏ†ï ÏÉÅÏÑ∏Î≥¥Í∏∞
    function detailSchedule(id) {
        let scheduleSendData = {};
        scheduleSendData.id = id;
        requestWithData('schedule/readScheduleDetail', scheduleSendData, setDetailSchedule);
    }

    //ÏùºÏ†ï ÏÉÅÏÑ∏Î≥¥Í∏∞
    function setDetailSchedule(res) {
        if (res.code === null) {
            return;
        }
        if (res.code === 'RSD001') {
            $("#detailSchedule").css("visibility", "visible");
            $("#scheduleTitle").text(res.data.title);
            $("#scheduleTitle").attr("data-id", res.data.id);
            let start = res.data.startDate.split("T");
            let end = res.data.endDate.split("T");
            $("#scheduleTime").html("ÏãúÏûë: " + start[0] + " üïí" + start[1] +
                " | Ï¢ÖÎ£å: " + end[0] + " üïí" + end[1]);
            $("#scheduleMemo").text(res.data.memo);
        } else if (res.code === 'RSD002') {
            console.log("ÏùºÏ†ïÏÉÅÏÑ∏ Ï°∞Ìöå Ïã§Ìå®");
        }
    }

    function chkDate() {
        let start1 = $("#createStartDate").val();
        let start2 = $("#createStartTime").val() + ":00";
        let startDate = new Date(start1 + "T" + start2);
        let end1 = $("#createEndDate").val();
        let end2 = $("#createEndTime").val() + ":00";
        let endDate = new Date(end1 + "T" + end2);

        console.log(startDate, endDate)

        if (startDate > endDate) {
            return false;
        } else {
            return true;
        }
    }

    function typeSchedule(type) {
        $("#saveBtn").attr("onclick", "saveSchedule('" + type + "')");

        if(type == 'update') {
            let scheduleSendData = {};
            scheduleSendData.id = $("#scheduleTitle").data("id");
            requestWithData('schedule/readScheduleDetail', scheduleSendData, updateDetailSchedule);
        }
    }

    function updateDetailSchedule(res) {
        if (res.code === null) {
            return;
        }
        if (res.code === 'RSD001') {
           $("#createTitle").val(res.data.title);
           $("#createMemo").val(res.data.memo);
           $("#createViewOption").val(res.data.viewOption);

           let start = res.data.startDate.split("T");
           $("#createStartDate").val(start[0]);
           $("#createStartTime").val(start[1]);

           let end = res.data.endDate.split("T");
           $("#createEndDate").val(end[0]);
           $("#createEndTime").val(end[1]);
        } else if (res.code === 'RSD002') {
            console.log("ÏùºÏ†ïÏÉÅÏÑ∏ Ï°∞Ìöå Ïã§Ìå®");
        }
    }

    function saveSchedule(type) {
        let scheduleSendData = {};
        scheduleSendData.title = $("#createTitle").val();
        scheduleSendData.memo = $("#createMemo").val();
        scheduleSendData.viewOption = $("#createViewOption").val();
        let start1 = $("#createStartDate").val();
        let start2 = $("#createStartTime").val();
        scheduleSendData.startDate = start1 + "T" + start2;
        let end1 = $("#createEndDate").val();
        let end2 = $("#createEndTime").val();
        scheduleSendData.endDate = end1 + "T" + end2;

        console.log(scheduleSendData);

        if (isEmpty(scheduleSendData.title)) {
            alert("Ï†úÎ™©ÏùÑ ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.");
        } else if (isEmpty(scheduleSendData.memo)) {
            alert("ÎÇ¥Ïö©ÏùÑ ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.");
        } else if (isEmpty(start1)) {
            alert("ÏãúÏûëÏùºÏùÑ ÏÑ†ÌÉùÌï¥Ï£ºÏÑ∏Ïöî.");
        } else if (isEmpty(start2)) {
            alert("ÏãúÏûëÏãúÍ∞ÑÏùÑ ÏÑ†ÌÉùÌï¥Ï£ºÏÑ∏Ïöî.");
        } else if (isEmpty(end1)) {
            alert("Ï¢ÖÎ£åÏùºÏùÑ ÏÑ†ÌÉùÌï¥Ï£ºÏÑ∏Ïöî.");
        } else if (isEmpty(end2)) {
            alert("Ï¢ÖÎ£åÏãúÍ∞ÑÏùÑ ÏÑ†ÌÉùÌï¥Ï£ºÏÑ∏Ïöî.");
        } else if (!(chkDate())) {
            alert("Ï¢ÖÎ£åÏùº/ÏãúÍ∞ÑÏù¥ ÏãúÏûëÏùº/ÏãúÍ∞ÑÎ≥¥Îã§ Îπ†Î•º Ïàò ÏóÜÏäµÎãàÎã§.\nÎã§Ïãú ÏÑ†ÌÉùÌï¥Ï£ºÏÑ∏Ïöî.");
        } else {
            if (type === 'create') {
                requestWithData('schedule/createSchedule', scheduleSendData, createAlertSchedule);
            } else if (type === 'update') {
                scheduleSendData.id = $("#scheduleTitle").data("id");
                requestWithData('schedule/updateSchedule', scheduleSendData, updateAlertSchedule);
            }
        }
    }

    //ÏùºÏ†ï ÏàòÏ†ï Í≤∞Í≥º ÏïåÎ¶ºÏ∞Ω
    function updateAlertSchedule(res) {
        console.log(res);
        if (res.code === null) {
            return;
        }
        if (res.code === 'US001') {
            alert("ÏùºÏ†ïÏù¥ ÏàòÏ†ïÎêòÏóàÏäµÎãàÎã§.");
            location.reload();
        } else if (res.code === 'US002') {
            alert("ÏùºÏ†ïÏàòÏ†ï Ïã§Ìå®");
        } else if (res.code === 'US002') {
            alert("ÏùºÏ†ïÏàòÏ†ï Ïã§Ìå®\nÍ∂åÌïúÏù¥ ÏóÜÏäµÎãàÎã§.");
        }
    }

    //ÏùºÏ†ï Ï∂îÍ∞Ä Í≤∞Í≥º ÏïåÎ¶ºÏ∞Ω
    function createAlertSchedule(res) {
        if (res.code === null) {
            return;
        }
        if (res.code === 'CS001') {
            alert("ÏùºÏ†ïÏù¥ Ï∂îÍ∞ÄÎêòÏóàÏäµÎãàÎã§.");
            location.reload();
        } else if (res.code === 'CS002') {
            alert("ÏùºÏ†ïÏ∂îÍ∞Ä Ïã§Ìå®");
        }
    }

    //ÏùºÏ†ï ÏÇ≠Ï†ú
    function deleteAlertSchedule() {
        if (confirm("ÏùºÏ†ïÏùÑ ÏÇ≠Ï†úÌïòÏãúÍ≤†ÏäµÎãàÍπå??") == true) {
            let scheduleSendData = {};
            scheduleSendData.id = $("#scheduleTitle").data("id");
            console.log(scheduleSendData);
            requestWithData('schedule/deleteSchedule', scheduleSendData, deleteSchedule);
        } else {
            return false;
        }
    }

    //ÏùºÏ†ï ÏÇ≠Ï†ú
    function deleteSchedule(res) {
        if (res.code === null) {
            return;
        }
        if (res.code === 'DS001') {
            alert("ÏùºÏ†ïÏù¥ ÏÇ≠Ï†úÎêòÏóàÏäµÎãàÎã§.");
            location.reload();
        } else if (res.code === 'DS002') {
            alert("ÏùºÏ†ïÏÇ≠Ï†ú Ïã§Ìå®");
        } else if (res.code === 'DS003') {
            alert("ÏùºÏ†ïÏÇ≠Ï†ú Ïã§Ìå®\nÍ∂åÌïúÏù¥ ÏóÜÏäµÎãàÎã§.");
        }
    }

    function consolLog(res) {
        console.log(res);
    }

</script>